// While there is a perfectly serviceable JSON parser; I'm not using it here because it currently
// is structured to not allow you to "steal" strings; which given that the string we get from the 
// login service is like 1600 bytes long means we're probably going to fragment the heap into
// oblivion. Using nmfu means we can do all the parsing on the stack (well we could, since the
// stack is pretty small I put it in the heap) and without that much fragmentation potential.
//
// The actual data handling still uses the real JSON parser though, of course.

out str[2000] access_token;
out bool      login_ok = false;

parser {
    "{";

    loop {
        /\s*/;
        case {
            /"access_token":/ -> {
                login_ok = true;
                /\s*"/;
				access_token = "Bearer ";
                access_token += /[^"]+/;
                /"/;
            }
            /"token_type"/, /"refresh_token"/ -> {
                /\s*:\s*"[^"]+"/;
            }
            /"expires_in"/ -> {
                /\s*:\s*\d+/;
            }
        }
        case {
            "," -> {}
            else -> {
                break;
            }
        }
    }

    wait "}";
}
