diff --git a/components/bootloader_support/CMakeLists.txt b/components/bootloader_support/CMakeLists.txt
index 574dfe7e..6c9849e4 100644
--- a/components/bootloader_support/CMakeLists.txt
+++ b/components/bootloader_support/CMakeLists.txt
@@ -8,7 +8,10 @@ else()
     set(COMPONENT_ADD_INCLUDEDIRS "include")
     set(COMPONENT_PRIV_INCLUDEDIRS "include_priv")
     set(COMPONENT_REQUIRES)
-    set(COMPONENT_PRIV_REQUIRES spi_flash mbedtls)
+    set(COMPONENT_PRIV_REQUIRES spi_flash)
+	if (CONFIG_SSL_USING_MBEDTLS)
+		set(COMPONENT_PRIV_REQUIRES spi_flash mbedtls)
+	endif()
 endif()
 
 register_component()
diff --git a/components/freertos/port/esp8266/include/freertos/FreeRTOSConfig.h b/components/freertos/port/esp8266/include/freertos/FreeRTOSConfig.h
index 44b2f72b..35e05d84 100644
--- a/components/freertos/port/esp8266/include/freertos/FreeRTOSConfig.h
+++ b/components/freertos/port/esp8266/include/freertos/FreeRTOSConfig.h
@@ -103,6 +103,10 @@ to exclude the API function. */
 #define INCLUDE_vTaskDelayUntil			1
 #define INCLUDE_vTaskDelay				1
 
+// for msign:
+#define INCLUDE_xTaskAbortDelay         1
+#define INCLUDE_eTaskGetState           1
+
 /*set the #define for debug info*/
 #define INCLUDE_xTaskGetCurrentTaskHandle 1
 #define INCLUDE_uxTaskGetStackHighWaterMark 1
diff --git a/components/freertos/port/esp8266/include/freertos/portmacro.h b/components/freertos/port/esp8266/include/freertos/portmacro.h
index b546cd7b..5443fb33 100644
--- a/components/freertos/port/esp8266/include/freertos/portmacro.h
+++ b/components/freertos/port/esp8266/include/freertos/portmacro.h
@@ -43,6 +43,7 @@ extern "C" {
 
 #if defined(configUSE_NEWLIB_REENTRANT) && configUSE_NEWLIB_REENTRANT == 1
 #include "esp_newlib.h"
+#define _impure_ptr _global_impure_ptr
 
 #undef _REENT_INIT_PTR
 #define _REENT_INIT_PTR(p) esp_reent_init(p)
diff --git a/components/log/log.c b/components/log/log.c
index d69e2533..7b295d11 100644
--- a/components/log/log.c
+++ b/components/log/log.c
@@ -42,7 +42,7 @@ static const uint32_t s_log_color[ESP_LOG_MAX] = {
     0,  //  ESP_LOG_NONE
     31, //  ESP_LOG_ERROR
     33, //  ESP_LOG_WARN
-    32, //  ESP_LOG_INFO
+    34, //  ESP_LOG_INFO
     0,  //  ESP_LOG_DEBUG
     0,  //  ESP_LOG_VERBOSE
 };
diff --git a/components/nvs_flash/CMakeLists.txt b/components/nvs_flash/CMakeLists.txt
index 7ce2871c..295cabd2 100644
--- a/components/nvs_flash/CMakeLists.txt
+++ b/components/nvs_flash/CMakeLists.txt
@@ -35,15 +35,15 @@ if(${target} STREQUAL "linux")
     target_compile_options(${COMPONENT_LIB} PUBLIC "-DLINUX_TARGET")
 else()
     # TODO: this is a workaround until IDF-2085 is fixed
-    idf_component_get_property(mbedtls_lib mbedtls COMPONENT_LIB)
-    target_link_libraries(${COMPONENT_LIB} PUBLIC ${mbedtls_lib})
+	#idf_component_get_property(mbedtls_lib mbedtls COMPONENT_LIB)
+	#target_link_libraries(${COMPONENT_LIB} PUBLIC ${mbedtls_lib})
 endif()
 
-if(CONFIG_NVS_ENCRYPTION)
-    target_sources(${COMPONENT_LIB} PRIVATE "src/nvs_encrypted_partition.cpp")
-    idf_component_get_property(mbedtls_lib mbedtls COMPONENT_LIB)
-    target_link_libraries(${COMPONENT_LIB} PUBLIC ${mbedtls_lib})
-endif()
+#if(CONFIG_NVS_ENCRYPTION)
+#target_sources(${COMPONENT_LIB} PRIVATE "src/nvs_encrypted_partition.cpp")
+#idf_component_get_property(mbedtls_lib mbedtls COMPONENT_LIB)
+#target_link_libraries(${COMPONENT_LIB} PUBLIC ${mbedtls_lib})
+#endif()
 
 if(${target} STREQUAL "linux")
     target_compile_options(${COMPONENT_LIB} PUBLIC --coverage)
diff --git a/components/wpa_supplicant/CMakeLists.txt b/components/wpa_supplicant/CMakeLists.txt
index 3300647e..ae31edd5 100644
--- a/components/wpa_supplicant/CMakeLists.txt
+++ b/components/wpa_supplicant/CMakeLists.txt
@@ -3,9 +3,9 @@ set(srcs "port/os_xtensa.c"
     "src/ap/ieee802_1x.c"
     "src/ap/wpa_auth.c"
     "src/ap/wpa_auth_ie.c"
-    "src/common/sae.c"
+	#"src/common/sae.c"
     "src/common/wpa_common.c"
-    "src/common/dpp.c"
+	#"src/common/dpp.c"
     "src/utils/bitfield.c"
     "src/crypto/aes-ctr.c"
     "src/crypto/aes-siv.c"
@@ -81,31 +81,8 @@ set(srcs "port/os_xtensa.c"
     "src/wps/wps_dev_attr.c"
     "src/wps/wps_enrollee.c"
     "src/wps/wps_registrar.c"
-    "src/wps/wps_validate.c")
-
-if(CONFIG_WPA_MBEDTLS_CRYPTO)
-    set(tls_src "src/crypto/tls_mbedtls.c")
-else()
-    set(tls_src
-    "src/tls/asn1.c"
-    "src/tls/bignum.c"
-    "src/tls/pkcs1.c"
-    "src/tls/pkcs5.c"
-    "src/tls/pkcs8.c"
-    "src/tls/rsa.c"
-    "src/tls/tls_internal.c"
-    "src/tls/tlsv1_client.c"
-    "src/tls/tlsv1_client_read.c"
-    "src/tls/tlsv1_client_write.c"
-    "src/tls/tlsv1_common.c"
-    "src/tls/tlsv1_cred.c"
-    "src/tls/tlsv1_record.c"
-    "src/tls/tlsv1_server.c"
-    "src/tls/tlsv1_server_read.c"
-    "src/tls/tlsv1_server_write.c"
-    "src/tls/x509v3.c"
-    )
-endif()
+    "src/wps/wps_validate.c"
+   "src/crypto/tls_mbedtls.c")
 
 if (CONFIG_WPA_11KV_SUPPORT)
     set(roaming_src
@@ -150,8 +127,8 @@ target_compile_definitions(${COMPONENT_LIB} PRIVATE
     ESP8266_WORKAROUND
     CONFIG_ECC
     CONFIG_IEEE80211W
-    CONFIG_WPA3_SAE
+	#CONFIG_WPA3_SAE
     #CONFIG_SHA256
-    CONFIG_DPP
+	# CONFIG_DPP
     CONFIG_WNM
     )
diff --git a/components/wpa_supplicant/src/crypto/crypto_internal.c b/components/wpa_supplicant/src/crypto/crypto_internal.c
index 8d6af0c9..0964046b 100644
--- a/components/wpa_supplicant/src/crypto/crypto_internal.c
+++ b/components/wpa_supplicant/src/crypto/crypto_internal.c
@@ -59,8 +59,10 @@ struct crypto_hash *  crypto_hash_init(enum crypto_hash_alg alg, const u8 *key,
 	size_t i;
 
 	ctx = (struct crypto_hash *)os_zalloc(sizeof(*ctx));
-	if (ctx == NULL)
+	if (ctx == NULL) {
+		ESP_LOGE(TAG, "Failed to allocate crypto  hash %d, sz %d", alg, sizeof(*ctx));
 		return NULL;
+	}
 
 	ctx->alg = alg;
 
@@ -155,6 +157,7 @@ struct crypto_hash *  crypto_hash_init(enum crypto_hash_alg alg, const u8 *key,
 		break;
 #endif /* CONFIG_SHA256 */
 	default:
+		ESP_LOGE(TAG, "unknown hash alg %d", alg);
 		os_free(ctx);
 		return NULL;
 	}
diff --git a/components/wpa_supplicant/src/crypto/tls_mbedtls.c b/components/wpa_supplicant/src/crypto/tls_mbedtls.c
index 409281ff..dcf2c1b5 100644
--- a/components/wpa_supplicant/src/crypto/tls_mbedtls.c
+++ b/components/wpa_supplicant/src/crypto/tls_mbedtls.c
@@ -468,7 +468,7 @@ static int tls_create_mbedtls_handle(const struct tls_connection_params *params,
 	}
 
 	/* Enable debug prints in case supplicant's prints are enabled */
-#if defined(DEBUG_PRINT) && defined(CONFIG_MBEDTLS_DEBUG) && defined(ESPRESSIF_USE)
+#if defined(CONFIG_MBEDTLS_DEBUG) && defined(ESPRESSIF_USE)
 	mbedtls_esp_enable_debug_log(&tls->conf, 2);
 #endif
 	return 0;
@@ -523,6 +523,8 @@ int tls_connection_established(void *tls_ctx, struct tls_connection *conn)
 		return 1;
 	}
 
+	wpa_printf(MSG_INFO, "TLS: conn status == %d", ssl->state);
+
 	return 0;
 }
 
@@ -576,7 +578,7 @@ struct wpabuf * tls_connection_handshake(void *tls_ctx,
 	}
 
 	/* Already read sever data till hello done */
-	if (tls->ssl.state == MBEDTLS_SSL_CLIENT_CERTIFICATE) {
+	if (tls->ssl.state == MBEDTLS_SSL_CLIENT_CERTIFICATE || tls->ssl.state == MBEDTLS_SSL_SERVER_HELLO_DONE) {
 		/* Read random data before session completes, not present after handshake */
 		if (tls->ssl.handshake) {
 			os_memcpy(conn->randbytes, tls->ssl.handshake->randbytes,
diff --git a/components/wpa_supplicant/src/eap_peer/eap_peap.c b/components/wpa_supplicant/src/eap_peer/eap_peap.c
index 54e0ac0c..ce3e3077 100644
--- a/components/wpa_supplicant/src/eap_peer/eap_peap.c
+++ b/components/wpa_supplicant/src/eap_peer/eap_peap.c
@@ -1087,14 +1087,17 @@ eap_peap_process(struct eap_sm *sm, void *priv,
 	resp = NULL;
 	if (tls_connection_established(sm->ssl_ctx, data->ssl.conn) &&
 	    !data->resuming) {
+		wpa_printf(MSG_DEBUG, "EAP-PEAP: conn established no resume");
 		struct wpabuf msg;
 		wpabuf_set(&msg, pos, left);
 		res = eap_peap_decrypt(sm, data, ret, req, &msg, &resp);
 	} else {
+		wpa_printf(MSG_DEBUG, "EAP-PEAP: conn established fail");
 		res = eap_peer_tls_process_helper(sm, &data->ssl,
 						  EAP_TYPE_PEAP,
 						  data->peap_version, id, pos,
 						  left, &resp);
+		wpa_printf(MSG_DEBUG, "EAP-PEAP: tls proc help done");
 
 		if (tls_connection_established(sm->ssl_ctx, data->ssl.conn)) {
 			char label[24];
@@ -1349,4 +1352,4 @@ eap_peer_peap_register(void)
 	return ret;
 }
 
-#endif /* EAP_PEAP */
\ No newline at end of file
+#endif /* EAP_PEAP */
diff --git a/components/wpa_supplicant/src/esp_supplicant/esp_wpa_main.c b/components/wpa_supplicant/src/esp_supplicant/esp_wpa_main.c
index 7b37a6c0..46929125 100644
--- a/components/wpa_supplicant/src/esp_supplicant/esp_wpa_main.c
+++ b/components/wpa_supplicant/src/esp_supplicant/esp_wpa_main.c
@@ -193,7 +193,9 @@ static void wpa_sta_disconnected_cb(uint8_t reason_code)
         case WIFI_REASON_ASSOC_FAIL:
         case WIFI_REASON_CONNECTION_FAIL:
         case WIFI_REASON_HANDSHAKE_TIMEOUT:
+#ifdef CONFIG_WPA3_SAE
             esp_wpa3_free_sae_data();
+#endif
             wpa_sta_clear_curr_pmksa();
             break;
         default:
diff --git a/components/wpa_supplicant/src/tls/tlsv1_client.c b/components/wpa_supplicant/src/tls/tlsv1_client.c
index d9f038b9..6ab2f2a7 100755
--- a/components/wpa_supplicant/src/tls/tlsv1_client.c
+++ b/components/wpa_supplicant/src/tls/tlsv1_client.c
@@ -7,6 +7,7 @@
  */
 
 #include "utils/includes.h"
+#include <esp_system.h>
 
 #include "utils/common.h"
 #include "crypto/sha1.h"
@@ -451,6 +452,9 @@ struct tlsv1_client * tlsv1_client_init(void)
 	conn->state = CLIENT_HELLO;
 
 	if (tls_verify_hash_init(&conn->verify) < 0) {
+
+		ESP_LOGE(TAG, "tlsv1 got free heap: %d", esp_get_free_heap_size());
+
 		wpa_printf(MSG_DEBUG, "TLSv1: Failed to initialize verify "
 			   "hash");
 		os_free(conn);
