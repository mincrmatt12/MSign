diff --git a/components/bootloader_support/CMakeLists.txt b/components/bootloader_support/CMakeLists.txt
index 574dfe7e..6c9849e4 100644
--- a/components/bootloader_support/CMakeLists.txt
+++ b/components/bootloader_support/CMakeLists.txt
@@ -8,7 +8,10 @@ else()
     set(COMPONENT_ADD_INCLUDEDIRS "include")
     set(COMPONENT_PRIV_INCLUDEDIRS "include_priv")
     set(COMPONENT_REQUIRES)
-    set(COMPONENT_PRIV_REQUIRES spi_flash mbedtls)
+    set(COMPONENT_PRIV_REQUIRES spi_flash)
+	if (CONFIG_SSL_USING_MBEDTLS)
+		set(COMPONENT_PRIV_REQUIRES spi_flash mbedtls)
+	endif()
 endif()
 
 register_component()
diff --git a/components/bootloader_support/include/esp_image_format.h b/components/bootloader_support/include/esp_image_format.h
index c427cffa..98e7bf23 100644
--- a/components/bootloader_support/include/esp_image_format.h
+++ b/components/bootloader_support/include/esp_image_format.h
@@ -37,7 +37,7 @@ typedef enum {
 } esp_image_spi_mode_t;
 
 /* SPI flash clock frequency */
-enum {
+typedef enum {
     ESP_IMAGE_SPI_SPEED_40M,
     ESP_IMAGE_SPI_SPEED_26M,
     ESP_IMAGE_SPI_SPEED_20M,
diff --git a/components/esp8266/Kconfig b/components/esp8266/Kconfig
index f6268496..c8c4fbff 100644
--- a/components/esp8266/Kconfig
+++ b/components/esp8266/Kconfig
@@ -153,6 +153,12 @@ config ESP_PANIC_GDBSTUB
         of the crash.
 
         The UART's baudrate should be 115200 or others which can be recognized by xtensa GDB.
+
+config ESP_PANIC_USER_REBOOT
+	bool "Call user esp_custom_panic_handler then reboot"
+	help
+		Calls esp_custom_panic_handler and if it returns, immediately resets.
+
 endchoice
 
 config RESET_REASON
diff --git a/components/esp8266/driver/uart.c b/components/esp8266/driver/uart.c
index ae067dd0..a18444fa 100644
--- a/components/esp8266/driver/uart.c
+++ b/components/esp8266/driver/uart.c
@@ -421,10 +421,6 @@ static void uart_intr_service(void *arg)
     // read status to get interrupt status for UART0-1
     uint32_t uart_intr_status = UART[uart_num]->int_st.val;
 
-    if (uart_isr_func == NULL) {
-        return;
-    }
-
     do {
         uart_intr_status = UART[uart_num]->int_st.val;
         if (uart_intr_status != 0) {
diff --git a/components/esp8266/include/esp_libc.h b/components/esp8266/include/esp_libc.h
index d77ea28a..0ba25134 100644
--- a/components/esp8266/include/esp_libc.h
+++ b/components/esp8266/include/esp_libc.h
@@ -38,8 +38,6 @@
 extern "C" {
 #endif
 
-int32_t os_get_random(unsigned char *buf, size_t len);
-
 /**
   * @brief  put a character to uart or other devices, similar with putc.
   *
diff --git a/components/esp8266/ld/esp8266.project.ld.in b/components/esp8266/ld/esp8266.project.ld.in
index 54d7bb48..32bd6bf8 100644
--- a/components/esp8266/ld/esp8266.project.ld.in
+++ b/components/esp8266/ld/esp8266.project.ld.in
@@ -117,20 +117,6 @@ SECTIONS
     . = ALIGN(4);
   } > dram0_0_seg
 
-  /*This section holds data that should not be initialized at power up.
-    The section located in Internal SRAM memory region. The macro _NOINIT
-    can be used as attribute to place data into this section.
-    See the esp_attr.h file for more information.
-  */
-  .noinit (NOLOAD):
-  {
-    . = ALIGN(4);
-    _noinit_start = ABSOLUTE(.);
-    *(.noinit .noinit.*)
-    . = ALIGN(4) ;
-    _noinit_end = ABSOLUTE(.);
-  } > dram0_0_seg
-
   /* Shared RAM */
   .dram0.bss (NOLOAD) :
   {
@@ -155,6 +141,20 @@ SECTIONS
     _bss_end = ABSOLUTE(.);
   } > dram0_0_seg
 
+  /*This section holds data that should not be initialized at power up.
+    The section located in Internal SRAM memory region. The macro _NOINIT
+    can be used as attribute to place data into this section.
+    See the esp_attr.h file for more information.
+  */
+  .noinit (NOLOAD):
+  {
+    . = ALIGN(4);
+    _noinit_start = ABSOLUTE(.);
+    *(.noinit .noinit.*)
+    . = ALIGN(4) ;
+    _noinit_end = ABSOLUTE(.);
+  } > dram0_0_seg
+
   ASSERT(((_bss_end - ORIGIN(dram0_0_seg)) <= LENGTH(dram0_0_seg)),
           "DRAM segment data does not fit.")
 
diff --git a/components/esp8266/source/system_api.c b/components/esp8266/source/system_api.c
index 1a0c1aad..f494e8ce 100644
--- a/components/esp8266/source/system_api.c
+++ b/components/esp8266/source/system_api.c
@@ -398,7 +398,7 @@ uint32_t esp_get_old_sysconf_addr(void)
 
 void os_update_cpu_frequency(uint32_t ticks_per_us)
 {
-    extern uint32_t _xt_tick_divisor;
+    extern unsigned _xt_tick_divisor;
 
     if (REG_READ(DPORT_CTL_REG) & DPORT_CTL_DOUBLE_CLK) {
         g_esp_ticks_per_us = CPU_CLK_FREQ * 2 / 1000000;
diff --git a/components/esp_gdbstub/esp8266/gdbstub_esp8266.c b/components/esp_gdbstub/esp8266/gdbstub_esp8266.c
index e5e77c26..46493474 100644
--- a/components/esp_gdbstub/esp8266/gdbstub_esp8266.c
+++ b/components/esp_gdbstub/esp8266/gdbstub_esp8266.c
@@ -21,6 +21,7 @@
 
 void esp_gdbstub_target_init(void)
 {
+   CLEAR_PERI_REG_MASK(UART_SWAP_REG, 0x4);
 }
 
 int esp_gdbstub_getchar(void)
diff --git a/components/freertos/port/esp8266/include/freertos/FreeRTOSConfig.h b/components/freertos/port/esp8266/include/freertos/FreeRTOSConfig.h
index 44b2f72b..35e05d84 100644
--- a/components/freertos/port/esp8266/include/freertos/FreeRTOSConfig.h
+++ b/components/freertos/port/esp8266/include/freertos/FreeRTOSConfig.h
@@ -103,6 +103,10 @@ to exclude the API function. */
 #define INCLUDE_vTaskDelayUntil			1
 #define INCLUDE_vTaskDelay				1
 
+// for msign:
+#define INCLUDE_xTaskAbortDelay         1
+#define INCLUDE_eTaskGetState           1
+
 /*set the #define for debug info*/
 #define INCLUDE_xTaskGetCurrentTaskHandle 1
 #define INCLUDE_uxTaskGetStackHighWaterMark 1
diff --git a/components/freertos/port/esp8266/include/freertos/portmacro.h b/components/freertos/port/esp8266/include/freertos/portmacro.h
index b546cd7b..5443fb33 100644
--- a/components/freertos/port/esp8266/include/freertos/portmacro.h
+++ b/components/freertos/port/esp8266/include/freertos/portmacro.h
@@ -43,6 +43,7 @@ extern "C" {
 
 #if defined(configUSE_NEWLIB_REENTRANT) && configUSE_NEWLIB_REENTRANT == 1
 #include "esp_newlib.h"
+#define _impure_ptr _global_impure_ptr
 
 #undef _REENT_INIT_PTR
 #define _REENT_INIT_PTR(p) esp_reent_init(p)
diff --git a/components/freertos/port/esp8266/panic.c b/components/freertos/port/esp8266/panic.c
index f3421fc6..916c730c 100644
--- a/components/freertos/port/esp8266/panic.c
+++ b/components/freertos/port/esp8266/panic.c
@@ -32,13 +32,13 @@
 
 #define PANIC(_fmt, ...)    ets_printf(_fmt, ##__VA_ARGS__)
 
-#if defined(CONFIG_ESP_PANIC_SILENT_REBOOT) || defined(CONFIG_ESP_PANIC_PRINT_REBOOT)
+#if defined(CONFIG_ESP_PANIC_SILENT_REBOOT) || defined(CONFIG_ESP_PANIC_PRINT_REBOOT) || defined(CONFIG_ESP_PANIC_USER_REBOOT)
 #define ESP_PANIC_REBOOT
 #else
 #undef ESP_PANIC_REBOOT
 #endif
 
-#if defined(CONFIG_ESP_PANIC_SILENT_REBOOT)
+#if defined(CONFIG_ESP_PANIC_SILENT_REBOOT) || defined(CONFIG_ESP_PANIC_USER_REBOOT)
 #undef ESP_PANIC_PRINT
 #else
 #define ESP_PANIC_PRINT
@@ -166,6 +166,10 @@ void panicHandler(void *frame, int wdt)
     }
 
     panic_frame(frame);
+#elif defined(CONFIG_ESP_PANIC_USER_REBOOT)
+	extern void esp_custom_panic_handler(void *frame, int wdt);
+	
+	esp_custom_panic_handler(frame, wdt);
 #endif
 
 #ifdef ESP_PANIC_REBOOT
diff --git a/components/freertos/port/esp8266/port.c b/components/freertos/port/esp8266/port.c
index 89c2da3f..5a9809f7 100644
--- a/components/freertos/port/esp8266/port.c
+++ b/components/freertos/port/esp8266/port.c
@@ -55,9 +55,9 @@
 
 extern uint8_t NMIIrqIsOn;
 
-uint32_t cpu_sr;
+unsigned cpu_sr;
 
-uint32_t _xt_tick_divisor;
+unsigned _xt_tick_divisor;
 
 /* Each task maintains its own interrupt status in the critical nesting
 variable. */
diff --git a/components/freertos/port/esp8266/xtensa_vectors.S b/components/freertos/port/esp8266/xtensa_vectors.S
index 3485d74b..37e22520 100644
--- a/components/freertos/port/esp8266/xtensa_vectors.S
+++ b/components/freertos/port/esp8266/xtensa_vectors.S
@@ -856,7 +856,9 @@ nmi_reentried:
     addi    a3,  a3,  1
     s32i    a3,  a2,  0
 
-    call0   wDev_ProcessFiq                         // call interrupt's C handler
+    .literal .LwDPF, wDev_ProcessFiq
+    l32r    a8, .LwDPF
+    callx0  a8                                      // call interrupt's C handler
 
     //Restore NMI level
     movi    a2,  _chip_nmi_cnt
diff --git a/components/heap/port/esp8266/esp_heap_init.c b/components/heap/port/esp8266/esp_heap_init.c
index 8135911b..fcfa17be 100644
--- a/components/heap/port/esp8266/esp_heap_init.c
+++ b/components/heap/port/esp8266/esp_heap_init.c
@@ -36,7 +36,7 @@ size_t IRAM_ATTR heap_caps_get_dram_free_size(void)
  */
 void heap_caps_init(void)
 {
-    extern char _bss_end;
+    extern char _noinit_end;
     size_t heap_region_num = 0;
 
 #ifndef CONFIG_HEAP_DISABLE_IRAM
@@ -51,8 +51,8 @@ void heap_caps_init(void)
     }
 #endif
 
-    g_heap_region[heap_region_num].start_addr = (uint8_t *)&_bss_end;
-    g_heap_region[heap_region_num].total_size = ((size_t)(0x40000000 - (uint32_t)&_bss_end));
+    g_heap_region[heap_region_num].start_addr = (uint8_t *)&_noinit_end;
+    g_heap_region[heap_region_num].total_size = ((size_t)(0x40000000 - (uint32_t)&_noinit_end));
     g_heap_region[heap_region_num].caps = MALLOC_CAP_8BIT | MALLOC_CAP_32BIT | MALLOC_CAP_DMA;
     heap_region_num++;
 
diff --git a/components/log/log.c b/components/log/log.c
index d69e2533..7b295d11 100644
--- a/components/log/log.c
+++ b/components/log/log.c
@@ -42,7 +42,7 @@ static const uint32_t s_log_color[ESP_LOG_MAX] = {
     0,  //  ESP_LOG_NONE
     31, //  ESP_LOG_ERROR
     33, //  ESP_LOG_WARN
-    32, //  ESP_LOG_INFO
+    34, //  ESP_LOG_INFO
     0,  //  ESP_LOG_DEBUG
     0,  //  ESP_LOG_VERBOSE
 };
diff --git a/components/nvs_flash/CMakeLists.txt b/components/nvs_flash/CMakeLists.txt
index 7ce2871c..65edecb8 100644
--- a/components/nvs_flash/CMakeLists.txt
+++ b/components/nvs_flash/CMakeLists.txt
@@ -35,8 +35,8 @@ if(${target} STREQUAL "linux")
     target_compile_options(${COMPONENT_LIB} PUBLIC "-DLINUX_TARGET")
 else()
     # TODO: this is a workaround until IDF-2085 is fixed
-    idf_component_get_property(mbedtls_lib mbedtls COMPONENT_LIB)
-    target_link_libraries(${COMPONENT_LIB} PUBLIC ${mbedtls_lib})
+	#idf_component_get_property(mbedtls_lib mbedtls COMPONENT_LIB)
+	#target_link_libraries(${COMPONENT_LIB} PUBLIC ${mbedtls_lib})
 endif()
 
 if(CONFIG_NVS_ENCRYPTION)
diff --git a/components/nvs_flash/src/intrusive_list.h b/components/nvs_flash/src/intrusive_list.h
index bb580502..90dfb0a0 100644
--- a/components/nvs_flash/src/intrusive_list.h
+++ b/components/nvs_flash/src/intrusive_list.h
@@ -16,6 +16,7 @@
 
 #include <cassert>
 #include <unordered_map>
+#include <stddef.h>
 
 template <typename T>
 class intrusive_list;
diff --git a/components/spi_flash/include/esp_partition.h b/components/spi_flash/include/esp_partition.h
index d7d295c9..e9d08597 100644
--- a/components/spi_flash/include/esp_partition.h
+++ b/components/spi_flash/include/esp_partition.h
@@ -255,7 +255,7 @@ esp_err_t esp_partition_write(const esp_partition_t* partition,
  *         or one of error codes from lower-level flash driver.
  */
 esp_err_t esp_partition_erase_range(const esp_partition_t* partition,
-                                    uint32_t start_addr, uint32_t size);
+                                    size_t start_addr, size_t size);
 
 #ifdef CONFIG_ENABLE_FLASH_MMAP
 /**
diff --git a/components/wpa_supplicant/CMakeLists.txt b/components/wpa_supplicant/CMakeLists.txt
index 3300647e..f6986f61 100644
--- a/components/wpa_supplicant/CMakeLists.txt
+++ b/components/wpa_supplicant/CMakeLists.txt
@@ -3,50 +3,9 @@ set(srcs "port/os_xtensa.c"
     "src/ap/ieee802_1x.c"
     "src/ap/wpa_auth.c"
     "src/ap/wpa_auth_ie.c"
-    "src/common/sae.c"
     "src/common/wpa_common.c"
-    "src/common/dpp.c"
     "src/utils/bitfield.c"
-    "src/crypto/aes-ctr.c"
-    "src/crypto/aes-siv.c"
-    "src/crypto/sha256-kdf.c"
-    "src/crypto/aes-cbc.c"
-    "src/crypto/aes-ccm.c"
-    "src/crypto/aes-internal-dec.c"
-    "src/crypto/aes-internal-enc.c"
-    "src/crypto/aes-internal.c"
-    "src/crypto/aes-omac1.c"
-    "src/crypto/aes-unwrap.c"
-    "src/crypto/aes-wrap.c"
-    "src/crypto/aes-omac1.c"
-    "src/crypto/bignum.c"
-    "src/crypto/ccmp.c"
-    "src/crypto/crypto_mbedtls.c"
-    "src/crypto/crypto_mbedtls-bignum.c"
-    "src/crypto/crypto_mbedtls-ec.c"
     "src/crypto/crypto_ops.c"
-    "src/crypto/crypto_internal-cipher.c"
-    "src/crypto/crypto_internal-modexp.c"
-    "src/crypto/crypto_internal-rsa.c"
-    "src/crypto/crypto_mbedtls-rsa.c"
-    "src/crypto/crypto_internal.c"
-    "src/crypto/des-internal.c"
-    "src/crypto/dh_group5.c"
-    "src/crypto/dh_groups.c"
-    "src/crypto/md4-internal.c"
-    "src/crypto/md5-internal.c"
-    "src/crypto/md5.c"
-    "src/crypto/ms_funcs.c"
-    "src/crypto/rc4.c"
-    "src/crypto/sha1-internal.c"
-    "src/crypto/sha1-pbkdf2.c"
-    "src/crypto/sha1.c"
-    "src/crypto/sha256-internal.c"
-    "src/crypto/sha256.c"
-    "src/crypto/sha1-tlsprf.c"
-    "src/crypto/sha256-tlsprf.c"
-    "src/crypto/sha384-tlsprf.c"
-    "src/crypto/sha256-prf.c"
     "src/eap_peer/chap.c"
     "src/eap_peer/eap.c"
     "src/eap_peer/eap_common.c"
@@ -84,7 +43,12 @@ set(srcs "port/os_xtensa.c"
     "src/wps/wps_validate.c")
 
 if(CONFIG_WPA_MBEDTLS_CRYPTO)
+		message(STATUS "HI2")
     set(tls_src "src/crypto/tls_mbedtls.c")
+	set(tls_dep mbedtls)
+elseif(CONFIG_WPA_EXTERNAL_TLS)
+	set(tls_src "")
+	set(tls_dep ${CONFIG_WPA_EXTERNAL_TLS_COMPONENT})
 else()
     set(tls_src
     "src/tls/asn1.c"
@@ -105,6 +69,7 @@ else()
     "src/tls/tlsv1_server_write.c"
     "src/tls/x509v3.c"
     )
+	set(tls_dep "")
 endif()
 
 if (CONFIG_WPA_11KV_SUPPORT)
@@ -121,10 +86,94 @@ else()
     set(roaming_src "")
 endif()
 
-idf_component_register(SRCS "${srcs}" "${tls_src}" "${roaming_src}"
+if (CONFIG_WPA_EXTERNAL_TLS_CRYPTO)
+	set (crypto_src "")
+elseif (CONFIG_WPA_EXTERNAL_TLS)
+	set (crypto_src 
+    "src/crypto/aes-ctr.c"
+    "src/crypto/aes-siv.c"
+    "src/crypto/sha256-kdf.c"
+    "src/crypto/aes-cbc.c"
+    "src/crypto/aes-ccm.c"
+    "src/crypto/aes-internal-dec.c"
+    "src/crypto/aes-internal-enc.c"
+    "src/crypto/aes-internal.c"
+    "src/crypto/aes-omac1.c"
+    "src/crypto/aes-unwrap.c"
+    "src/crypto/aes-wrap.c"
+    "src/crypto/aes-omac1.c"
+    "src/crypto/bignum.c"
+    "src/crypto/ccmp.c"
+    "src/crypto/crypto_internal-cipher.c"
+    "src/crypto/crypto_internal-modexp.c"
+    "src/crypto/crypto_internal.c"
+    "src/crypto/des-internal.c"
+    "src/crypto/dh_group5.c"
+    "src/crypto/dh_groups.c"
+    "src/crypto/md4-internal.c"
+    "src/crypto/md5-internal.c"
+    "src/crypto/md5.c"
+    "src/crypto/ms_funcs.c"
+    "src/crypto/rc4.c"
+    "src/crypto/sha1-internal.c"
+    "src/crypto/sha1-pbkdf2.c"
+    "src/crypto/sha1.c"
+    "src/crypto/sha256-internal.c"
+    "src/crypto/sha256.c"
+    "src/crypto/sha1-tlsprf.c"
+    "src/crypto/sha256-tlsprf.c"
+    "src/crypto/sha384-tlsprf.c"
+    "src/crypto/sha256-prf.c"
+	)
+else()
+	set (crypto_src 
+    "src/crypto/aes-ctr.c"
+    "src/crypto/aes-siv.c"
+    "src/crypto/sha256-kdf.c"
+    "src/crypto/aes-cbc.c"
+    "src/crypto/aes-ccm.c"
+    "src/crypto/aes-internal-dec.c"
+    "src/crypto/aes-internal-enc.c"
+    "src/crypto/aes-internal.c"
+    "src/crypto/aes-omac1.c"
+    "src/crypto/aes-unwrap.c"
+    "src/crypto/aes-wrap.c"
+    "src/crypto/aes-omac1.c"
+    "src/crypto/bignum.c"
+    "src/crypto/ccmp.c"
+    "src/crypto/crypto_internal-cipher.c"
+    "src/crypto/crypto_internal-modexp.c"
+    "src/crypto/crypto_internal-rsa.c"
+    "src/crypto/crypto_internal.c"
+    "src/crypto/des-internal.c"
+    "src/crypto/dh_group5.c"
+    "src/crypto/dh_groups.c"
+    "src/crypto/md4-internal.c"
+    "src/crypto/md5-internal.c"
+    "src/crypto/md5.c"
+    "src/crypto/ms_funcs.c"
+    "src/crypto/rc4.c"
+    "src/crypto/sha1-internal.c"
+    "src/crypto/sha1-pbkdf2.c"
+    "src/crypto/sha1.c"
+    "src/crypto/sha256-internal.c"
+    "src/crypto/sha256.c"
+    "src/crypto/sha1-tlsprf.c"
+    "src/crypto/sha256-tlsprf.c"
+    "src/crypto/sha384-tlsprf.c"
+    "src/crypto/sha256-prf.c"
+	)
+endif()
+
+idf_component_register(SRCS "${srcs}" "${tls_src}" "${roaming_src}" "${crypto_src}"
                     INCLUDE_DIRS include port/include include/esp_supplicant
                     PRIV_INCLUDE_DIRS src
-                    PRIV_REQUIRES mbedtls freertos heap newlib)
+					PRIV_REQUIRES freertos heap newlib)
+
+if (CONFIG_WPA_EXTERNAL_TLS)
+	idf_component_get_property(tls_lib_name ${tls_dep} COMPONENT_LIB)
+	target_link_libraries(${COMPONENT_LIB} PRIVATE ${tls_lib_name})
+endif()
 
 set_source_files_properties(
     src/crypto/crypto_ops.c
@@ -150,8 +199,8 @@ target_compile_definitions(${COMPONENT_LIB} PRIVATE
     ESP8266_WORKAROUND
     CONFIG_ECC
     CONFIG_IEEE80211W
-    CONFIG_WPA3_SAE
+	#CONFIG_WPA3_SAE
     #CONFIG_SHA256
-    CONFIG_DPP
+	#CONFIG_DPP
     CONFIG_WNM
     )
diff --git a/components/wpa_supplicant/Kconfig b/components/wpa_supplicant/Kconfig
index e21d696d..70f65f51 100644
--- a/components/wpa_supplicant/Kconfig
+++ b/components/wpa_supplicant/Kconfig
@@ -14,6 +14,21 @@ config LTM_FAST
         help
             Select this option to use MbedTLS crypto API's which utilize hardware acceleration.
 
+	config WPA_EXTERNAL_TLS
+		bool "Use external TLS/crypto API"
+		default n
+
+	if WPA_EXTERNAL_TLS
+		config WPA_EXTERNAL_TLS_COMPONENT
+			string "External crypto API component"
+			default ""
+
+		config WPA_EXTERNAL_TLS_CRYPTO
+			bool "Use external TLS lib for crypto"
+			default n
+
+	endif
+
     config WPA_DEBUG_PRINT
         bool "Print debug messages from WPA Supplicant"
         default n
diff --git a/components/wpa_supplicant/include/wpatls/common.h b/components/wpa_supplicant/include/wpatls/common.h
new file mode 120000
index 00000000..97386452
--- /dev/null
+++ b/components/wpa_supplicant/include/wpatls/common.h
@@ -0,0 +1 @@
+../../src/utils/common.h
\ No newline at end of file
diff --git a/components/wpa_supplicant/src/tls/tls.h b/components/wpa_supplicant/include/wpatls/tls.h
similarity index 100%
rename from components/wpa_supplicant/src/tls/tls.h
rename to components/wpa_supplicant/include/wpatls/tls.h
diff --git a/components/wpa_supplicant/src/crypto/tls_mbedtls.c b/components/wpa_supplicant/src/crypto/tls_mbedtls.c
index 409281ff..6f90b44c 100644
--- a/components/wpa_supplicant/src/crypto/tls_mbedtls.c
+++ b/components/wpa_supplicant/src/crypto/tls_mbedtls.c
@@ -618,6 +618,7 @@ struct wpabuf * tls_connection_server_handshake(void *tls_ctx,
 						struct wpabuf **appl_data)
 {
 	wpa_printf(MSG_ERROR, "%s: not supported %d", __func__, __LINE__);
+
 	return NULL;
 }
 
diff --git a/components/wpa_supplicant/src/eap_peer/eap.c b/components/wpa_supplicant/src/eap_peer/eap.c
index 114985c9..c1a26808 100644
--- a/components/wpa_supplicant/src/eap_peer/eap.c
+++ b/components/wpa_supplicant/src/eap_peer/eap.c
@@ -29,7 +29,8 @@
 #include "crypto/crypto.h"
 
 #include "utils/ext_password.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
+#define EAP_DEFINE_GLOBALS
 #include "eap_peer/eap_i.h"
 #include "eap_peer/eap_config.h"
 #include "eap_peer/eap.h"
diff --git a/components/wpa_supplicant/src/eap_peer/eap.h b/components/wpa_supplicant/src/eap_peer/eap.h
index 4e84ea7f..2e3df1e4 100644
--- a/components/wpa_supplicant/src/eap_peer/eap.h
+++ b/components/wpa_supplicant/src/eap_peer/eap.h
@@ -19,25 +19,29 @@ struct eap_method_type {
 	EapType method;
 };
 
-u8 *g_wpa_anonymous_identity;
-int g_wpa_anonymous_identity_len;
-u8 *g_wpa_username;
-int g_wpa_username_len;
-const u8 *g_wpa_client_cert;
-int g_wpa_client_cert_len;
-const u8 *g_wpa_private_key;
-int g_wpa_private_key_len;
-const u8 *g_wpa_private_key_passwd;
-int g_wpa_private_key_passwd_len;
-
-const u8 *g_wpa_ca_cert;
-int g_wpa_ca_cert_len;
-
-u8 *g_wpa_password;
-int g_wpa_password_len;
-
-u8 *g_wpa_new_password;
-int g_wpa_new_password_len;
+#ifndef EAP_DEFINE_GLOBALS
+#define EAP_DEFINE_GLOBALS extern
+#endif
+
+EAP_DEFINE_GLOBALS u8 *g_wpa_anonymous_identity;
+EAP_DEFINE_GLOBALS int g_wpa_anonymous_identity_len;
+EAP_DEFINE_GLOBALS u8 *g_wpa_username;
+EAP_DEFINE_GLOBALS int g_wpa_username_len;
+EAP_DEFINE_GLOBALS const u8 *g_wpa_client_cert;
+EAP_DEFINE_GLOBALS int g_wpa_client_cert_len;
+EAP_DEFINE_GLOBALS const u8 *g_wpa_private_key;
+EAP_DEFINE_GLOBALS int g_wpa_private_key_len;
+EAP_DEFINE_GLOBALS const u8 *g_wpa_private_key_passwd;
+EAP_DEFINE_GLOBALS int g_wpa_private_key_passwd_len;
+
+EAP_DEFINE_GLOBALS const u8 *g_wpa_ca_cert;
+EAP_DEFINE_GLOBALS int g_wpa_ca_cert_len;
+
+EAP_DEFINE_GLOBALS u8 *g_wpa_password;
+EAP_DEFINE_GLOBALS int g_wpa_password_len;
+
+EAP_DEFINE_GLOBALS u8 *g_wpa_new_password;
+EAP_DEFINE_GLOBALS int g_wpa_new_password_len;
 
 const u8 * eap_get_eapKeyData(struct eap_sm *sm, size_t *len);
 void eap_deinit_prev_method(struct eap_sm *sm, const char *txt);
diff --git a/components/wpa_supplicant/src/eap_peer/eap_mschapv2.c b/components/wpa_supplicant/src/eap_peer/eap_mschapv2.c
index dff5aeec..819fd77d 100644
--- a/components/wpa_supplicant/src/eap_peer/eap_mschapv2.c
+++ b/components/wpa_supplicant/src/eap_peer/eap_mschapv2.c
@@ -14,7 +14,7 @@
 #include "utils/common.h"
 #include "crypto/random.h"
 #include "crypto/ms_funcs.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
 #include "eap_peer/eap_i.h"
 #include "eap_peer/eap_defs.h"
 #include "eap_peer/eap_tls_common.h"
diff --git a/components/wpa_supplicant/src/eap_peer/eap_peap.c b/components/wpa_supplicant/src/eap_peer/eap_peap.c
index 54e0ac0c..7441b9ac 100644
--- a/components/wpa_supplicant/src/eap_peer/eap_peap.c
+++ b/components/wpa_supplicant/src/eap_peer/eap_peap.c
@@ -10,7 +10,7 @@
 #ifdef EAP_PEAP
 #include "utils/common.h"
 #include "crypto/sha1.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
 #include "eap_peer/eap_tlv_common.h"
 #include "eap_peer/eap_peap_common.h"
 #include "eap_peer/eap_i.h"
@@ -1349,4 +1349,4 @@ eap_peer_peap_register(void)
 	return ret;
 }
 
-#endif /* EAP_PEAP */
\ No newline at end of file
+#endif /* EAP_PEAP */
diff --git a/components/wpa_supplicant/src/eap_peer/eap_tls.c b/components/wpa_supplicant/src/eap_peer/eap_tls.c
index c6d0bd05..97744eb9 100755
--- a/components/wpa_supplicant/src/eap_peer/eap_tls.c
+++ b/components/wpa_supplicant/src/eap_peer/eap_tls.c
@@ -9,7 +9,7 @@
 
 #ifdef EAP_TLS
 #include "utils/common.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
 #include "eap_peer/eap_i.h"
 #include "eap_peer/eap_defs.h"
 #include "eap_peer/eap_tls_common.h"
diff --git a/components/wpa_supplicant/src/eap_peer/eap_tls_common.c b/components/wpa_supplicant/src/eap_peer/eap_tls_common.c
index 9c93f6d0..720e32e6 100755
--- a/components/wpa_supplicant/src/eap_peer/eap_tls_common.c
+++ b/components/wpa_supplicant/src/eap_peer/eap_tls_common.c
@@ -10,7 +10,7 @@
 
 #include "utils/common.h"
 #include "crypto/sha1.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
 #include "eap_peer/eap_i.h"
 #include "eap_peer/eap_tls_common.h"
 #include "eap_peer/eap_config.h"
diff --git a/components/wpa_supplicant/src/eap_peer/eap_ttls.c b/components/wpa_supplicant/src/eap_peer/eap_ttls.c
index b014dbd3..5f802d68 100644
--- a/components/wpa_supplicant/src/eap_peer/eap_ttls.c
+++ b/components/wpa_supplicant/src/eap_peer/eap_ttls.c
@@ -11,7 +11,7 @@
 #ifdef EAP_TTLS
 #include "utils/common.h"
 #include "crypto/sha1.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
 #include "eap_peer/eap.h"
 #include "eap_peer/eap_ttls.h"
 #include "eap_peer/mschapv2.h"
diff --git a/components/wpa_supplicant/src/esp_supplicant/esp_wpa2.c b/components/wpa_supplicant/src/esp_supplicant/esp_wpa2.c
index cfc9e139..83b6f5df 100755
--- a/components/wpa_supplicant/src/esp_supplicant/esp_wpa2.c
+++ b/components/wpa_supplicant/src/esp_supplicant/esp_wpa2.c
@@ -33,7 +33,7 @@
 #include "crypto/crypto.h"
 
 #include "utils/ext_password.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
 #include "eap_peer/eap_i.h"
 #include "eap_peer/eap_config.h"
 #include "eap_peer/eap.h"
diff --git a/components/wpa_supplicant/src/esp_supplicant/esp_wpa_main.c b/components/wpa_supplicant/src/esp_supplicant/esp_wpa_main.c
index 7b37a6c0..46929125 100644
--- a/components/wpa_supplicant/src/esp_supplicant/esp_wpa_main.c
+++ b/components/wpa_supplicant/src/esp_supplicant/esp_wpa_main.c
@@ -193,7 +193,9 @@ static void wpa_sta_disconnected_cb(uint8_t reason_code)
         case WIFI_REASON_ASSOC_FAIL:
         case WIFI_REASON_CONNECTION_FAIL:
         case WIFI_REASON_HANDSHAKE_TIMEOUT:
+#ifdef CONFIG_WPA3_SAE
             esp_wpa3_free_sae_data();
+#endif
             wpa_sta_clear_curr_pmksa();
             break;
         default:
diff --git a/components/wpa_supplicant/src/esp_supplicant/esp_wps.c b/components/wpa_supplicant/src/esp_supplicant/esp_wps.c
index 6190e4c1..0603096d 100755
--- a/components/wpa_supplicant/src/esp_supplicant/esp_wps.c
+++ b/components/wpa_supplicant/src/esp_supplicant/esp_wps.c
@@ -2014,7 +2014,7 @@ int wps_check_wifi_mode(void)
     return ESP_OK;
 }
 
-int esp_wifi_wps_enable(const esp_wps_config_t *config)
+esp_err_t esp_wifi_wps_enable(const esp_wps_config_t *config)
 {
     int ret;
 
@@ -2099,7 +2099,7 @@ int wifi_wps_disable_internal(void)
     return ESP_OK;
 }
 
-int esp_wifi_wps_disable(void)
+esp_err_t esp_wifi_wps_disable(void)
 {
     int ret = 0;
 
@@ -2141,7 +2141,7 @@ int esp_wifi_wps_disable(void)
     return ESP_OK;
 }
 
-int esp_wifi_wps_start(int timeout_ms)
+esp_err_t esp_wifi_wps_start(int timeout_ms)
 {
     if (ESP_OK != wps_check_wifi_mode()) {
         return ESP_ERR_WIFI_MODE;
diff --git a/components/wpa_supplicant/src/rsn_supp/wpa.h b/components/wpa_supplicant/src/rsn_supp/wpa.h
index e0c63fe4..758de8bc 100755
--- a/components/wpa_supplicant/src/rsn_supp/wpa.h
+++ b/components/wpa_supplicant/src/rsn_supp/wpa.h
@@ -134,7 +134,7 @@ int wpa_michael_mic_failure(u16 isunicast);
 
 wifi_cipher_type_t cipher_type_map_supp_to_public(uint32_t wpa_cipher);
 
-uint32_t cipher_type_map_supp_to_public(wifi_cipher_type_t cipher);
+uint32_t cipher_type_map_public_to_supp(wifi_cipher_type_t cipher);
 
 void wpa_sta_clear_curr_pmksa(void);
 
diff --git a/components/wpa_supplicant/src/tls/tls_internal.c b/components/wpa_supplicant/src/tls/tls_internal.c
index 73e9aa2f..11e3863c 100755
--- a/components/wpa_supplicant/src/tls/tls_internal.c
+++ b/components/wpa_supplicant/src/tls/tls_internal.c
@@ -14,7 +14,7 @@
 #include "utils/common.h"
 #include "crypto/sha1.h"
 #include "crypto/md5.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
 #include "tls/tlsv1_client.h"
 #include "tls/tlsv1_server.h"
 
diff --git a/components/wpa_supplicant/src/tls/tlsv1_client.c b/components/wpa_supplicant/src/tls/tlsv1_client.c
index d9f038b9..3403b393 100755
--- a/components/wpa_supplicant/src/tls/tlsv1_client.c
+++ b/components/wpa_supplicant/src/tls/tlsv1_client.c
@@ -10,7 +10,7 @@
 
 #include "utils/common.h"
 #include "crypto/sha1.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
 #include "tls/tlsv1_common.h"
 #include "tls/tlsv1_record.h"
 #include "tls/tlsv1_client.h"
diff --git a/components/wpa_supplicant/src/tls/tlsv1_client_read.c b/components/wpa_supplicant/src/tls/tlsv1_client_read.c
index a585f206..0240b265 100755
--- a/components/wpa_supplicant/src/tls/tlsv1_client_read.c
+++ b/components/wpa_supplicant/src/tls/tlsv1_client_read.c
@@ -12,7 +12,7 @@
 #include "crypto/md5.h"
 #include "crypto/sha1.h"
 #include "crypto/sha256.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
 #include "tls/x509v3.h"
 #include "tls/tlsv1_common.h"
 #include "tls/tlsv1_record.h"
diff --git a/components/wpa_supplicant/src/tls/tlsv1_client_write.c b/components/wpa_supplicant/src/tls/tlsv1_client_write.c
index 53a1b338..9733ec6c 100755
--- a/components/wpa_supplicant/src/tls/tlsv1_client_write.c
+++ b/components/wpa_supplicant/src/tls/tlsv1_client_write.c
@@ -13,7 +13,7 @@
 #include "crypto/sha1.h"
 #include "crypto/sha256.h"
 #include "crypto/random.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
 #include "tls/x509v3.h"
 #include "tls/tlsv1_common.h"
 #include "tls/tlsv1_record.h"
diff --git a/components/wpa_supplicant/src/tls/tlsv1_common.c b/components/wpa_supplicant/src/tls/tlsv1_common.c
index f0ba62f2..39fcae85 100755
--- a/components/wpa_supplicant/src/tls/tlsv1_common.c
+++ b/components/wpa_supplicant/src/tls/tlsv1_common.c
@@ -11,7 +11,7 @@
 #include "utils/common.h"
 #include "crypto/sha1.h"
 #include "crypto/sha256.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
 #include "tls/x509v3.h"
 #include "tls/tlsv1_common.h"
 #include "eap_peer/eap_i.h"
diff --git a/components/wpa_supplicant/src/tls/tlsv1_server.c b/components/wpa_supplicant/src/tls/tlsv1_server.c
index b835ce0f..65f4c904 100755
--- a/components/wpa_supplicant/src/tls/tlsv1_server.c
+++ b/components/wpa_supplicant/src/tls/tlsv1_server.c
@@ -10,7 +10,7 @@
 
 #include "utils/common.h"
 #include "crypto/sha1.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
 #include "tls/tlsv1_common.h"
 #include "tls/tlsv1_record.h"
 #include "tls/tlsv1_server.h"
diff --git a/components/wpa_supplicant/src/tls/tlsv1_server_read.c b/components/wpa_supplicant/src/tls/tlsv1_server_read.c
index cc426626..27aab7fe 100755
--- a/components/wpa_supplicant/src/tls/tlsv1_server_read.c
+++ b/components/wpa_supplicant/src/tls/tlsv1_server_read.c
@@ -12,7 +12,7 @@
 #include "crypto/md5.h"
 #include "crypto/sha1.h"
 #include "crypto/sha256.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
 #include "tls/x509v3.h"
 #include "tls/tlsv1_common.h"
 #include "tls/tlsv1_record.h"
diff --git a/components/wpa_supplicant/src/tls/tlsv1_server_write.c b/components/wpa_supplicant/src/tls/tlsv1_server_write.c
index 3d393bc9..d06f6596 100755
--- a/components/wpa_supplicant/src/tls/tlsv1_server_write.c
+++ b/components/wpa_supplicant/src/tls/tlsv1_server_write.c
@@ -13,7 +13,7 @@
 #include "crypto/sha1.h"
 #include "crypto/sha256.h"
 #include "crypto/random.h"
-#include "tls/tls.h"
+#include "wpatls/tls.h"
 #include "tls/x509v3.h"
 #include "tls/tlsv1_common.h"
 #include "tls/tlsv1_record.h"
diff --git a/requirements.txt b/requirements.txt
index 6a979330..45e9c2ae 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -8,6 +8,6 @@ setuptools
 click>=5.0
 pyserial>=3.0
 future>=0.15.2
-cryptography>=2.1.4,<35
-pyparsing>=2.0.3,<2.4.0
+#cryptography~=36.0
+pyparsing>=2.0.3
 pyelftools>=0.22
diff --git a/tools/cmake/project.cmake b/tools/cmake/project.cmake
index e64080e6..58e727c2 100644
--- a/tools/cmake/project.cmake
+++ b/tools/cmake/project.cmake
@@ -399,7 +399,7 @@ macro(project project_name)
     target_link_libraries(${project_elf} ${build_components})
 
     set(mapfile "${CMAKE_BINARY_DIR}/${CMAKE_PROJECT_NAME}.map")
-    target_link_libraries(${project_elf} "-Wl,--cref -Wl,--Map=${mapfile} -Wl,--start-group")
+	target_link_libraries(${project_elf} "-Wl,--cref -Wl,--Map=${mapfile} -Wl,--start-group")
 
     set_property(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}" APPEND PROPERTY
         ADDITIONAL_MAKE_CLEAN_FILES
diff --git a/tools/cmake/toolchain-esp8266.cmake b/tools/cmake/toolchain-esp8266.cmake
index 565fbe9a..ff876952 100644
--- a/tools/cmake/toolchain-esp8266.cmake
+++ b/tools/cmake/toolchain-esp8266.cmake
@@ -4,8 +4,8 @@ set(CMAKE_C_COMPILER xtensa-lx106-elf-gcc)
 set(CMAKE_CXX_COMPILER xtensa-lx106-elf-g++)
 set(CMAKE_ASM_COMPILER xtensa-lx106-elf-gcc)
 
-set(CMAKE_C_FLAGS "-mlongcalls -Wno-frame-address" CACHE STRING "C Compiler Base Flags")
-set(CMAKE_CXX_FLAGS "-mlongcalls -Wno-frame-address" CACHE STRING "C++ Compiler Base Flags")
+set(CMAKE_C_FLAGS "-mlongcalls -Wno-frame-address -Wno-format" CACHE STRING "C Compiler Base Flags")
+set(CMAKE_CXX_FLAGS "-mlongcalls -Wno-frame-address -Wno-format" CACHE STRING "C++ Compiler Base Flags")
 
 # Can be removed after gcc 5.2.0 support is removed (ref GCC_NOT_5_2_0)
 set(CMAKE_EXE_LINKER_FLAGS "-nostdlib -Wl,--gc-sections" CACHE STRING "Linker Base Flags")
